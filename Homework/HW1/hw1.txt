1.
First 11 Padovan numbers:
> (PAD 0)
1
> (PAD 1)
1
> (PAD 2)
1
> (PAD 3)
2
> (PAD 4)
2
> (PAD 5)
3
> (PAD 6)
4
> (PAD 7)
5
> (PAD 8)
7
> (PAD 9)
9
> (PAD 10)
12

When a larger value of N is used:
> (PAD 100000)
*** - Program stack overflow. RESET
The program returns a stack overflow error. Because the stack is a limited resource. 
If the recursive calls exceeds the size of stack, the program will return an error 
and then stop the program.

2.
> (SUMS 0)
0
> (SUMS 1)
0
> (SUMS 2)
0
> (SUMS 3)
1
> (SUMS 4)
1
> (SUMS 5)
2
> (SUMS 6)
3
> (SUMS 7)
4
> (SUMS 8)
6
> (SUMS 9)
8
> (SUMS 10)
11

PAD(n) = SUMS(n) + 1
PAD(n) can be finally represented by a summation of base cases which are 1.
Assume the result of PAD(n) = m, then there are m-1 additions required
to compute PAD(n), therefore SUMS(n) = m - 1

3.
> (ANON '42)
?
> (ANON 'FOO)
?
> (ANON '(((L E) F) T))
(((? ?) ?) ?)
> (ANON '(5 FOO 3.1 -0.2))
(? ? ? ?)
> (ANON '(1 (FOO 3.1) -0.2))
(? (? ?) ?)
> (ANON '(((1 2) (FOO 3.1)) (BAR -0.2)))
(((? ?) (? ?)) (? ?))
> (ANON '(R (I (G (H T)))))
(? (? (? (? ?))))